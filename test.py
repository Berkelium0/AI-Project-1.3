def validate_hex_grid(hex_dict, edge_length):
    valid = True
    for idx, coord in hex_dict.items():
        # Parse coordinates
        x, y, z = map(int, coord[1:].split('_'))

        # Check that x + y + z == 0
        if x + y + z != 0:
            print(f"Invalid coordinate: {coord}")
            valid = False

        # Check that the coordinates lie within the expected range
        if not (-edge_length + 1 <= x <= edge_length - 1 and
                -edge_length + 1 <= y <= edge_length - 1 and
                -edge_length + 1 <= z <= edge_length - 1):
            print(f"Out of range coordinate: {coord}")
            valid = False

    return valid


# Given dictionary
hex_dict = {1: 'x8_0_-8', 2: 'x7_1_-8', 3: 'x6_2_-8', 4: 'x5_3_-8', 5: 'x4_4_-8', 6: 'x3_5_-8', 7: 'x2_6_-8',
            8: 'x1_7_-8', 9: 'x0_8_-8', 10: 'x-1_9_-8', 11: 'x8_-1_-7', 12: 'x7_0_-7', 13: 'x6_1_-7', 14: 'x5_2_-7',
            15: 'x4_3_-7', 16: 'x3_4_-7', 17: 'x2_5_-7', 18: 'x1_6_-7', 19: 'x0_7_-7', 20: 'x-1_8_-7', 21: 'x-2_9_-7',
            22: 'x8_-2_-6', 23: 'x7_-1_-6', 24: 'x6_0_-6', 25: 'x5_1_-6', 26: 'x4_2_-6', 27: 'x3_3_-6', 28: 'x2_4_-6',
            29: 'x1_5_-6', 30: 'x0_6_-6', 31: 'x-1_7_-6', 32: 'x-2_8_-6', 33: 'x-3_9_-6', 34: 'x8_-3_-5',
            35: 'x7_-2_-5', 36: 'x6_-1_-5', 37: 'x5_0_-5', 38: 'x4_1_-5', 39: 'x3_2_-5', 40: 'x2_3_-5', 41: 'x1_4_-5',
            42: 'x0_5_-5', 43: 'x-1_6_-5', 44: 'x-2_7_-5', 45: 'x-3_8_-5', 46: 'x-4_9_-5', 47: 'x8_-4_-4',
            48: 'x7_-3_-4', 49: 'x6_-2_-4', 50: 'x5_-1_-4', 51: 'x4_0_-4', 52: 'x3_1_-4', 53: 'x2_2_-4', 54: 'x1_3_-4',
            55: 'x0_4_-4', 56: 'x-1_5_-4', 57: 'x-2_6_-4', 58: 'x-3_7_-4', 59: 'x-4_8_-4', 60: 'x-5_9_-4',
            61: 'x8_-5_-3', 62: 'x7_-4_-3', 63: 'x6_-3_-3', 64: 'x5_-2_-3', 65: 'x4_-1_-3', 66: 'x3_0_-3',
            67: 'x2_1_-3', 68: 'x1_2_-3', 69: 'x0_3_-3', 70: 'x-1_4_-3', 71: 'x-2_5_-3', 72: 'x-3_6_-3', 73: 'x-4_7_-3',
            74: 'x-5_8_-3', 75: 'x-6_9_-3', 76: 'x8_-6_-2', 77: 'x7_-5_-2', 78: 'x6_-4_-2', 79: 'x5_-3_-2',
            80: 'x4_-2_-2', 81: 'x3_-1_-2', 82: 'x2_0_-2', 83: 'x1_1_-2', 84: 'x0_2_-2', 85: 'x-1_3_-2', 86: 'x-2_4_-2',
            87: 'x-3_5_-2', 88: 'x-4_6_-2', 89: 'x-5_7_-2', 90: 'x-6_8_-2', 91: 'x-7_9_-2', 92: 'x8_-7_-1',
            93: 'x7_-6_-1', 94: 'x6_-5_-1', 95: 'x5_-4_-1', 96: 'x4_-3_-1', 97: 'x3_-2_-1', 98: 'x2_-1_-1',
            99: 'x1_0_-1', 100: 'x0_1_-1', 101: 'x-1_2_-1', 102: 'x-2_3_-1', 103: 'x-3_4_-1', 104: 'x-4_5_-1',
            105: 'x-5_6_-1', 106: 'x-6_7_-1', 107: 'x-7_8_-1', 108: 'x-8_9_-1', 109: 'x8_-8_0', 110: 'x7_-7_0',
            111: 'x6_-6_0', 112: 'x5_-5_0', 113: 'x4_-4_0', 114: 'x3_-3_0', 115: 'x2_-2_0', 116: 'x1_-1_0',
            117: 'x0_0_0', 118: 'x-1_1_0', 119: 'x-2_2_0', 120: 'x-3_3_0', 121: 'x-4_4_0', 122: 'x-5_5_0',
            123: 'x-6_6_0', 124: 'x-7_7_0', 125: 'x-8_8_0', 126: 'x7_-8_1', 127: 'x6_-7_1', 128: 'x5_-6_1',
            129: 'x4_-5_1', 130: 'x3_-4_1', 131: 'x2_-3_1', 132: 'x1_-2_1', 133: 'x0_-1_1', 134: 'x-1_0_1',
            135: 'x-2_1_1', 136: 'x-3_2_1', 137: 'x-4_3_1', 138: 'x-5_4_1', 139: 'x-6_5_1', 140: 'x-7_6_1',
            141: 'x-8_7_1', 142: 'x6_-8_2', 143: 'x5_-7_2', 144: 'x4_-6_2', 145: 'x3_-5_2', 146: 'x2_-4_2',
            147: 'x1_-3_2', 148: 'x0_-2_2', 149: 'x-1_-1_2', 150: 'x-2_0_2', 151: 'x-3_1_2', 152: 'x-4_2_2',
            153: 'x-5_3_2', 154: 'x-6_4_2', 155: 'x-7_5_2', 156: 'x-8_6_2', 157: 'x5_-8_3', 158: 'x4_-7_3',
            159: 'x3_-6_3', 160: 'x2_-5_3', 161: 'x1_-4_3', 162: 'x0_-3_3', 163: 'x-1_-2_3', 164: 'x-2_-1_3',
            165: 'x-3_0_3', 166: 'x-4_1_3', 167: 'x-5_2_3', 168: 'x-6_3_3', 169: 'x-7_4_3', 170: 'x-8_5_3',
            171: 'x4_-8_4', 172: 'x3_-7_4', 173: 'x2_-6_4', 174: 'x1_-5_4', 175: 'x0_-4_4', 176: 'x-1_-3_4',
            177: 'x-2_-2_4', 178: 'x-3_-1_4', 179: 'x-4_0_4', 180: 'x-5_1_4', 181: 'x-6_2_4', 182: 'x-7_3_4',
            183: 'x-8_4_4', 184: 'x3_-8_5', 185: 'x2_-7_5', 186: 'x1_-6_5', 187: 'x0_-5_5', 188: 'x-1_-4_5',
            189: 'x-2_-3_5', 190: 'x-3_-2_5', 191: 'x-4_-1_5', 192: 'x-5_0_5', 193: 'x-6_1_5', 194: 'x-7_2_5',
            195: 'x-8_3_5', 196: 'x2_-8_6', 197: 'x1_-7_6', 198: 'x0_-6_6', 199: 'x-1_-5_6', 200: 'x-2_-4_6',
            201: 'x-3_-3_6', 202: 'x-4_-2_6', 203: 'x-5_-1_6', 204: 'x-6_0_6', 205: 'x-7_1_6', 206: 'x-8_2_6',
            207: 'x1_-8_7', 208: 'x0_-7_7', 209: 'x-1_-6_7', 210: 'x-2_-5_7', 211: 'x-3_-4_7', 212: 'x-4_-3_7',
            213: 'x-5_-2_7', 214: 'x-6_-1_7', 215: 'x-7_0_7', 216: 'x-8_1_7', 217: 'x0_-8_8', 218: 'x-1_-7_8',
            219: 'x-2_-6_8', 220: 'x-3_-5_8', 221: 'x-4_-4_8', 222: 'x-5_-3_8', 223: 'x-6_-2_8', 224: 'x-7_-1_8',
            225: 'x-8_0_8'}

# Edge length
edge_length = 9

# Validate the grid
is_valid = validate_hex_grid(hex_dict, edge_length)
if is_valid:
    print("All coordinates are valid.")
else:
    print("There are invalid coordinates.")
